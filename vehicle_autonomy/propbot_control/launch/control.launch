<?xml version="1.0"?>
<launch>

  <arg name="simulation" default="$(optenv ROBOT_SIMULATION false)"/>
  <arg name="robot_namespace" default="$(optenv ROBOT_NAMESPACE robot)"/>
  <arg name="laser_enabled" default="$(optenv PROPBOT_VLP-16_ENABLED false)" />
  <arg name="rgbd_camera_enabled" default="$(optenv PROPBOT_REALSENSE_ENABLED false)" />

   <!-- Load robot description -->
  <include file="$(find propbot_description)/launch/description.launch">
    <arg name="laser_enabled" default="$(arg laser_enabled)" />
    <arg name="rgbd_camera_enabled" default="$(arg rgbd_camera_enabled)" />
  </include>

  <!-- Load rgbd_camera_paramters -->
  <group if="$(arg rgbd_camera_enabled)" ns="camera">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="external_manager" value="false" />
      <arg name="manager" value="realsense2_camera_manager" />
      <arg name="serial_no" value="" />
      <arg name="usb_port_id" value="" />
      <arg name="device_type" value="" />
      <arg name="tf_prefix" value="camera" />
      <arg name="json_file_path" value="" />
      <arg name="rosbag_filename" value="" />
      <arg name="required" value="false" />

      <arg name="fisheye_width" value="0" />
      <arg name="fisheye_height" value="0" />
      <arg name="enable_fisheye" value="false" />
      <arg name="enable_fisheye1" value="false" />
      <arg name="enable_fisheye2" value="false" />

      <arg name="depth_width" value="640" />
      <arg name="depth_height" value="480" />
      <arg name="enable_depth" value="true" />

      <arg name="infra_width" value="640" />
      <arg name="infra_height" value="480" />
      <arg name="enable_infra1" value="false" />
      <arg name="enable_infra2" value="false" />

      <arg name="color_width" value="640" />
      <arg name="color_height" value="480" />
      <arg name="enable_color" value="true" />

      <arg name="fisheye_fps" value="30" />
      <arg name="depth_fps" value="30" />
      <arg name="infra_fps" value="30" />
      <arg name="color_fps" value="30" />
      <arg name="gyro_fps" value="0" />
      <arg name="accel_fps" value="0" />
      <arg name="enable_gyro" value="true" />
      <arg name="enable_accel" value="true" />

      <arg name="enable_pointcloud" value="true" />
      <arg name="pointcloud_texture_stream" value="RS2_STREAM_COLOR" /> <!-- use RS2_STREAM_ANY to avoid using texture -->
      <arg name="pointcloud_texture_index" value="0" />

      <arg name="enable_sync" value="false" />
      <arg name="align_depth" value="false" />

      <arg name="base_frame_id" value="camera_link" />
      <arg name="depth_frame_id" value="realsense_depth_frame" />
      <arg name="infra1_frame_id" value="realsense_infra1_frame" />
      <arg name="infra2_frame_id" value="realsense_infra2_frame" />
      <arg name="color_frame_id" value="realsense_color_frame" />
      <arg name="fisheye_frame_id" value="realsense_fisheye_frame" />
      <arg name="fisheye1_frame_id" value="realsense_fisheye1_frame" />
      <arg name="fisheye2_frame_id" value="realsense_fisheye2_frame" />
      <arg name="accel_frame_id" value="realsense_accel_frame" />
      <arg name="gyro_frame_id" value="realsense_gyro_frame" />
      <arg name="pose_frame_id" value="realsense_pose_frame" />

      <arg name="depth_optical_frame_id" value="realsense_depth_optical_frame" />
      <arg name="infra1_optical_frame_id" value="realsense_infra1_optical_frame" />
      <arg name="infra2_optical_frame_id" value="realsense_infra2_optical_frame" />
      <arg name="color_optical_frame_id" value="realsense_color_optical_frame" />
      <arg name="fisheye_optical_frame_id" value="realsense_fisheye_optical_frame" />
      <arg name="fisheye1_optical_frame_id" value="realsense_fisheye1_optical_frame" />
      <arg name="fisheye2_optical_frame_id" value="realsense_fisheye2_optical_frame" />
      <arg name="accel_optical_frame_id" value="realsense_accel_optical_frame" />
      <arg name="gyro_optical_frame_id" value="realsense_gyro_optical_frame" />
      <arg name="imu_optical_frame_id" value="realsense_imu_optical_frame" />
      <arg name="pose_optical_frame_id" value="realsense_pose_optical_frame" />

      <arg name="aligned_depth_to_color_frame_id" value="realsense_aligned_depth_to_color_frame" />
      <arg name="aligned_depth_to_infra1_frame_id" value="realsense_aligned_depth_to_infra1_frame" />
      <arg name="aligned_depth_to_infra2_frame_id" value="realsense_aligned_depth_to_infra2_frame" />
      <arg name="aligned_depth_to_fisheye_frame_id" value="realsense_aligned_depth_to_fisheye_frame" />
      <arg name="aligned_depth_to_fisheye1_frame_id" value="realsense_aligned_depth_to_fisheye1_frame" />
      <arg name="aligned_depth_to_fisheye2_frame_id" value="realsense_aligned_depth_to_fisheye2_frame" />

      <arg name="publish_tf" value="true" />
      <arg name="tf_publish_rate" value="0" /> <!-- 0 - static transform -->

      <arg name="odom_frame_id" value="realsense_odom_frame" />
      <arg name="topic_odom_in" value="realsense/odom_in" />
      <arg name="calib_odom_file" value="" />
      <arg name="publish_odom_tf" value="false" />
      <arg name="filters" value="" />
      <arg name="clip_distance" value="-1" />
      <arg name="linear_accel_cov" value="0.01" />
      <arg name="initial_reset" value="false" />
      <arg name="unite_imu_method" value="none" /> <!-- Options are: [none, copy, linear_interpolation] -->
      <arg name="allow_no_texture_points" value="false" />
    </include>

  </group>

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find propbot_control)/config/control.yaml" />

  <!-- Spawn controllers -->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="propbot_joint_publisher propbot_velocity_controller"/>
      
  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find propbot_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="propbot_velocity_controller/cmd_vel"/>
  </node>

</launch>
